{"version":3,"sources":["logo.svg","components/AddContact.js","components/ListContact.js","components/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["AddContact","props","useState","firstName","lastName","email","phone","status","contact","setContact","checked","setChecked","onChange","e","persist","target","name","value","className","Container","Row","Col","md","lg","xl","Card","CardHeader","CardBody","Form","onSubmit","preventDefault","data","axios","post","then","result","alert","console","log","history","push","catch","error","InputGroup","Label","for","sm","Input","type","id","placeholder","CardFooter","FormGroup","row","Button","color","block","ListContact","setData","useEffect","a","response","token","get","headers","res","sortedContacts","sort","b","GetData","Table","hover","bordered","striped","responsive","size","colSpan","map","item","href","class","onClick","pathname","delete","window","location","reload","EditContact","apiGetContactUrl","match","params","App","document","title","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f8aedcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Card, CardHeader, CardFooter, Col, Row, Container, Form, FormGroup, Input, InputGroup, Label, CardBody } from 'reactstrap';\r\n\r\nfunction AddContact(props) {\r\n    const [contact, setContact] = useState({ firstName: '', lastName: '', email:'', phone: '', status: true });\r\n    const [checked, setChecked] = useState(contact.status);\r\n\r\n    const apiAddContactUrl = \"http://localhost:56037/api/Contacts/AddUpdateContact\";\r\n    \r\n    //Method to call api to create new contact\r\n    const contactAdd = (e) => {\r\n        e.preventDefault();\r\n        const data = {firstName: contact.firstName, lastName: contact.lastName, email: contact.email, phone: contact.phone, status: checked};\r\n        \r\n        axios.post(apiAddContactUrl, data)\r\n            .then((result) => {\r\n                alert(\"Contact \" + data.firstName + \" \" + data.lastName + \" Added Successfully !\");\r\n                console.log(result);\r\n                props.history.push('/ListContact');\r\n            })\r\n            .catch(error => {\r\n                alert(\"Failed to Add Contact \" + data.firstName + \" \" + data.lastName);\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setContact({...contact, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onCheckboxChange = (e) => {\r\n        e.persist();\r\n        setChecked(!checked);\r\n    }\r\n\r\n    return(\r\n        <div className=\"app flex-row align-items-center\">\r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md=\"12\" lg=\"10\" xl=\"8\">\r\n                        <Card className=\"mx-4\">\r\n                        <CardHeader>  \r\n                            <i className=\"fa fa-align-justify\"></i> <b>Add Contact</b>  \r\n                        </CardHeader>  \r\n                            <CardBody className=\"p-4\">\r\n                                <Form onSubmit={contactAdd}>\r\n                                     \r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Label for=\"firstName\" sm={2}>First Name</Label>\r\n                                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" value={contact.firstName} onChange={onChange} />\r\n                                    </InputGroup>\r\n\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Label for=\"lastName\" sm={2}>Last Name</Label>\r\n                                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={contact.lastName} onChange={onChange} />\r\n                                    </InputGroup>\r\n\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Label for=\"email\" sm={2}>Email</Label>\r\n                                        <Input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" value={contact.email} onChange={onChange} />\r\n                                    </InputGroup>\r\n\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Label for=\"phone\" sm={2}>Phone</Label>\r\n                                        <Input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Phone\" value={contact.phone} onChange={onChange} />\r\n                                    </InputGroup>\r\n\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Label for=\"status\" sm={2}>Active</Label>\r\n                                        <Input type=\"checkbox\" name=\"status\" id=\"status\" checked={checked} value={contact.status} onChange={onCheckboxChange}/>  \r\n                                    </InputGroup>\r\n\r\n                                    <CardFooter className=\"p-4\">\r\n                                        <Row>\r\n                                            <Col>  \r\n                                                <FormGroup row>  \r\n                                                    <Col sm={8}>  \r\n                                                    </Col>  \r\n                                                    \r\n                                                    <Col sm={1}>  \r\n                                                        <Button type=\"submit\" color=\"success\" block>Submit</Button>  \r\n                                                    </Col>  \r\n                                                    \r\n                                                    <Col sm={3}>  \r\n                                                        <Button color=\"danger\" block>Cancel</Button>  \r\n                                                    </Col>  \r\n                                                    \r\n                                                    <Col sm={5}>  \r\n                                                    </Col>  \r\n                                                </FormGroup>  \r\n                                            </Col>                                                          \r\n                                        </Row>\r\n                                    </CardFooter>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default AddContact","import React from 'react'  \r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';  \r\nimport axios from 'axios';  \r\nimport { useState, useEffect } from 'react'  \r\n\r\nfunction ListContact(props) {  \r\n\r\n  const [data, setData] = useState([]);  \r\n\r\n  useEffect(() => {  \r\n    const GetData = async () => { \r\n\r\n    //Should be passed through login screen\r\n    const username = \"amit.kumar\";\r\n    const password = \"@mitkumar123\" ; \r\n\r\n    axios.post(\"http://localhost:56037/api/Authentication/Authenticate\", {\r\n      \"username\": username,\r\n      \"password\": password\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        console.log(response.data.token);\r\n        const result = axios.get('http://localhost:56037/api/Contacts/GetAllContacts', {\r\n          headers: {\r\n            'Authorization': `bearer ${response.data.token}`\r\n          }})\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            \r\n            let sortedContacts = [...res.data];\r\n            sortedContacts.sort((a, b) => {\r\n              if (a.firstName < b.firstName) {\r\n                return -1;\r\n              }\r\n              if (a.firstName > b.firstName) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            });\r\n\r\n            setData(sortedContacts);\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Cannot fetch the Contacts at the moment !\");\r\n            console.error(error)\r\n          }); \r\n      }\r\n    })\r\n    .catch(error => {\r\n      alert(\"Authorization Error !\");\r\n      console.log(error);\r\n    });\r\n    };  \r\n    GetData();  \r\n  }, []);  \r\n\r\n  const deleteContact = (id) => {  \r\n    axios.delete('http://localhost:56037/api/Contacts/DeleteContact?id=' + id)  \r\n      .then((result) => { \r\n        alert(\"Contact deleted successfully !\");\r\n        //props.history.push('/ListContact');  \r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Cannot delete the Contact !\");\r\n        console.error(error)\r\n      });   \r\n  };  \r\n\r\n  const editContact = (id) => {  \r\n    props.history.push({  \r\n      pathname: '/EditContact/' + id  \r\n    });  \r\n  };  \r\n\r\nreturn (  \r\n    <div className=\"animated fadeIn\">  \r\n      <Row>  \r\n        <Col>  \r\n          <Card>  \r\n            <CardHeader>  \r\n              <i className=\"fa fa-align-justify\"></i> <b>Contact List</b>  \r\n              </CardHeader>  \r\n            <CardBody>  \r\n              <Table hover bordered striped responsive size=\"sm\">  \r\n                <thead>  \r\n                  <tr>  \r\n                    <th>Name</th>  \r\n                    <th>Email</th>  \r\n                    <th>Phone</th> \r\n                    <th>Status</th> \r\n                    <th>Action</th>\r\n                  </tr>  \r\n                </thead>  \r\n                <tbody>  \r\n                  {  \r\n                    data == null? <tr><td colSpan=\"5\">'No Contacts to Display'</td></tr>:\r\n                    data.map(item => {  \r\n                      return <tr key={item.id}>   \r\n                        <td>{item.firstName + ' ' + item.lastName}</td>  \r\n                        <td><a href= {\"mailto:\" + item.email}>{item.email}</a></td>  \r\n                        <td>{item.phone}</td>  \r\n                        <td>{item.status ? 'Active' :  'InActive'}</td>\r\n                        <td>  \r\n                            <div class=\"btn-group\">\r\n                                <button className=\"btn btn-outline-success btn-sm\" onClick={() => { editContact(item.id) }}>Edit</button> \r\n                            </div>\r\n                        \r\n                            <div class=\"btn-group\">\r\n                                <button className=\"btn btn-outline-danger btn-sm\" onClick={() => { deleteContact(item.id) }} >Delete</button>  \r\n                            </div>\r\n                        </td>\r\n                      </tr>  \r\n                    })}  \r\n                </tbody>  \r\n              </Table>  \r\n            </CardBody>  \r\n          </Card>  \r\n        </Col>  \r\n      </Row>  \r\n    </div>  \r\n  )  \r\n}  \r\nexport default ListContact","import React, { useState, useEffect } from 'react'  \r\nimport axios from 'axios';  \r\nimport { Button, Card, CardHeader, CardBody, CardFooter, Col, Row, Container, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label  } from 'reactstrap';  \r\n\r\nfunction EditContact(props) {  \r\n\r\n        const [contact, setContact]= useState({id: 0, firstName: '', lastName: '', email:'', phone: '', status: true });  \r\n        const [checked, setChecked] = useState(contact.status);\r\n\r\n        const apiGetContactUrl = \"http://localhost:56037/api/Contacts/GetContact?id=\" + props.match.params.id;  \r\n\r\n        useEffect(() => {  \r\n          const GetData = async () => {  \r\n            const result = await axios.get(apiGetContactUrl);  \r\n            setContact(result.data);  \r\n            setChecked(result.data.status);\r\n            console.log(result.data);\r\n          };  \r\n          GetData();  \r\n        }, []);  \r\n\r\n        //Method to call api to edit existing contact\r\n        const ContactEdit = (e) => {  \r\n          e.preventDefault();  \r\n          const apiEditContactUrl = \"http://localhost:56037/api/Contacts/AddUpdateContact\";\r\n          const data = {id:contact.id, firstName: contact.firstName, lastName: contact.lastName, email:contact.email, phone: contact.phone, status: checked }; \r\n          console.log(data);\r\n          axios.post(apiEditContactUrl, data)  \r\n            .then((result) => { \r\n              alert(\"Contact \" + data.firstName + \" \" + data.lastName + \" Modified Successfully !\"); \r\n              props.history.push('/ListContact')  \r\n            })\r\n            .catch(error => {\r\n              alert(\"Failed to Modify Contact \" + data.firstName + \" \" + data.lastName);\r\n              console.log(error);\r\n            });  \r\n        };  \r\n        \r\n        const onChange = (e) => {  \r\n          e.persist();  \r\n          setContact({...contact, [e.target.name]: e.target.value});  \r\n        }  \r\n\r\n        const onCheckboxChange = (e) => {\r\n          e.persist();\r\n          setChecked(!checked);\r\n        }\r\n\r\n        return (  \r\n                <div className=\"app flex-row align-items-center\">  \r\n                <Container>  \r\n                  <Row className=\"justify-content-center\">  \r\n                    <Col md=\"12\" lg=\"10\" xl=\"8\">  \r\n                      <Card className=\"mx-4\">  \r\n                        <CardHeader>  \r\n                            <i className=\"fa fa-align-justify\"></i> <b>Edit Contact</b>  \r\n                        </CardHeader>\r\n                        <CardBody className=\"p-4\">  \r\n                          <Form onSubmit={ContactEdit}>  \r\n                          \r\n                            <InputGroup className=\"mb-3\">\r\n                                <Label for=\"firstName\" sm={2}>First Name</Label>  \r\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" value={contact.firstName} onChange={ onChange }  />  \r\n                            </InputGroup>  \r\n                             <InputGroup className=\"mb-3\">\r\n                                <Label for=\"lastName\" sm={2}>Last Name</Label>  \r\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={contact.lastName} onChange={ onChange }/>  \r\n                            </InputGroup>  \r\n                            <InputGroup className=\"mb-3\">  \r\n                                <Label for=\"email\" sm={2}>Email</Label>\r\n                                <Input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" value={contact.email} onChange={ onChange }  />  \r\n                            </InputGroup>  \r\n                            <InputGroup className=\"mb-4\">\r\n                                <Label for=\"phone\" sm={2}>Phone</Label>  \r\n                                <Input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Phone\" value={contact.phone} onChange={ onChange }  />  \r\n                            </InputGroup>  \r\n                            <InputGroup className=\"mb-4\">  \r\n                                <Label for=\"status\" sm={2}>Active</Label>\r\n                                <Input type=\"checkbox\" name=\"status\" id=\"status\" checked={checked} value={contact.status} onChange={onCheckboxChange}/>  \r\n                            </InputGroup>  \r\n                              \r\n                      <CardFooter className=\"p-4\">  \r\n                          <Row>  \r\n                            <Col>  \r\n                                <FormGroup row>  \r\n                                    <Col sm={8}>  \r\n                                    </Col>  \r\n                                                    \r\n                                    <Col sm={1}>  \r\n                                        <Button type=\"submit\" color=\"success\" block>Submit</Button>  \r\n                                    </Col>  \r\n                                                    \r\n                                    <Col sm={3}>  \r\n                                        <Button color=\"danger\" block>Cancel</Button>  \r\n                                    </Col>  \r\n                                                    \r\n                                    <Col sm={5}>  \r\n                                    </Col>  \r\n                                </FormGroup>  \r\n                            </Col> \r\n                          </Row>  \r\n                        </CardFooter>  \r\n                          </Form>  \r\n                        </CardBody>                 \r\n                      </Card>  \r\n                    </Col>  \r\n                  </Row>  \r\n                </Container>  \r\n              </div>  \r\n        )  \r\n}  \r\nexport default EditContact  ","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react' \n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport AddContact from './components/AddContact';\nimport ListContact from './components/ListContact';\nimport EditContact from './components/EditContact';\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"Contact Book\"\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h2>Contact Book</h2>\n      <hr />\n      <Router>\n          <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navheader\"> \n              <div className=\"collapse navbar-collapse\">\n                <ul className=\"nav nav-tabs\">\n                  <li className=\"nav-item active\">\n                    <Link to={'/ListContact'} className=\"nav-link\">List Contact</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={'/AddContact'} className=\"nav-link\">Add Contact</Link>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n            <br/>\n            <Switch>\n              <Route exact path='/AddContact' component={AddContact}/>\n              <Route exact path='/ListContact' component={ListContact}/>\n              <Route exact path='/EditContact/:id' component={EditContact}/>\n            </Switch>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}